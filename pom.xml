<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <modelVersion>4.0.0</modelVersion>

    <name>transcode-jni</name>

    <artifactId>transcode-jni</artifactId>

    <groupId>org.karlbennett</groupId>

    <version>1.0-SNAPSHOT</version>

    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--Capture the value of the JAVA_HOME environment variable so that we can check for it's existence below.-->
        <jni.java.home>${env.JAVA_HOME}</jni.java.home>

        <!--This is the directory where all the native source code is kept.-->
        <native.dir>src/main/native/</native.dir>

        <!--This is the directory where the compiled native object files will be placed.-->
        <lib.dir>${project.build.directory}/classes/lib/</lib.dir>

        <!--This is the directory where any dependent native header files will be extracted.-->
        <include.dir>${project.build.directory}/include/</include.dir>
    </properties>

    <build>
        <plugins>
            <plugin>
                <!--Make sure we compile all the Java source as 1.6.-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerVersion>1.6</compilerVersion>
                    <fork>true</fork>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <plugin>
                <!--Make sure that the JAVA_HOME environment variable has been set.-->
                <!--This is because we rely on it for some of the directory paths in the Makefile.-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-property</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireProperty>
                                    <property>jni.java.home</property>
                                    <message>Error: JAVA_HOME must be set.</message>
                                </requireProperty>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!--Extract the source from the native transcode dependency into the build directory.-->
                <!--This is done because the native JNI code will need to include the header files.-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <id>src-dependencies</id>
                        <phase>process-resources</phase>
                        <goals>
                            <!-- use copy-dependencies instead if you don't want to explode the sources -->
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--Only unpack the source jar.-->
                            <classifier>sources</classifier>

                            <!--Only unpack the source for the native transcode dependency.-->
                            <includeArtifactIds>transcode</includeArtifactIds>

                            <!--The directory where the source will be extracted to.-->
                            <outputDirectory>${include.dir}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!--Generate the JNI headers and compile the native code.-->
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-native</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!--We create the native binary output directories with ANT so that the method of creation is -->
                                <!--platform independent.-->
                                <delete dir="${lib.dir}"/>
                                <mkdir dir="${lib.dir}"/>
                                <exec dir="${native.dir}" executable="make" failonerror="true"/>
                            </tasks>
                        </configuration>
                    </execution>

                    <execution>
                        <id>clean-native</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <exec dir="${native.dir}" executable="make" failonerror="false">
                                    <arg value="clean"/>
                                </exec>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.karlbennett</groupId>
            <artifactId>transcode-interface</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.karlbennett</groupId>
            <artifactId>transcode</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

</project>
